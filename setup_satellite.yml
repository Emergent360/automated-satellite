---
- hosts: "{{ HOSTS | default('satellite.example.com') }}"
  connection: local
  gather_facts: false
  tasks:
    - name: Satellite deployment instrumentation
      ansible.builtin.uri:
        url: https://docs.google.com/forms/d/e/1FAIpQLSdIZ77YpETjEfGOoYlXtMnQiU-6M7QFlb2hJA4ujo25QYb2jw/formResponse
        method: POST
        body: "ifq&entry.1569353616=smart_mgmt &entry.498055740={{ lookup('ansible.builtin.env', 'AWX_HOST') }}&sumbit=Submit"
      ignore_errors: true

    - name: check satellite status
      redhat.satellite.status_info:
        validate_certs: false

- hosts: "{{ HOSTS | default('satellite.example.com') }}"
  become: true
- name: satellite disconnected mode
  import_playbook: satellite_disconnected_mode.yml
  vars:
    disconnected_mode: "false"
  when: refresh_satellite_manifest

- name: satellite set bulk_load_size
  import_playbook: satellite_set_bulk_load_size.yml
  vars:
    bulk_load_size: 1000

- hosts: "{{ HOSTS | default('satellite.example.com') }}"
  become: true
  vars:
    refresh_satellite_manifest: false
    refresh_timeout: 14400
  tasks:
    - block:
        - name: Create tempfile for Satellite production.log asynchronous tail
          tempfile:
            state: file
          register: sat_prodlog_tempfile

        - name: Asynchronous tail Satellite production.log to tempfile 
          shell: tail -n 0 -f /var/log/foreman/production.log > {{ sat_prodlog_tempfile.path }}
          async: "{{ refresh_timeout }}"
          poll: 0
      when: refresh_satellite_manifest

- hosts: "{{ HOSTS | default('satellite.example.com') }}"
  connection: local
  gather_facts: false
  vars:
    refresh_satellite_manifest: false
    refresh_timeout: 14400
  tasks:
    - name: refresh manifest
      redhat.satellite.subscription_manifest:
        organization: "Default Organization"
        state: refreshed
      async: "{{ refresh_timeout }}"
      poll: 0
      register: refresh_async
      delegate_to: localhost
      when: refresh_satellite_manifest

- hosts: "{{ HOSTS | default('satellite.example.com') }}"
  become: true
  vars:
    refresh_satellite_manifest: false
    refresh_timeout: 14400
  tasks:
    - block:
      - name: >
          Watch the temp file until ManifestRefresh result ==> success appears before continuing...
        wait_for:
          path: "{{ sat_prodlog_tempfile.path }}"
          search_regex: "^.*ManifestRefresh.*state\ changed.*\ stopped\ \ result.*\ success"
          timeout: 1500
          sleep: 20

      - name: Remove tempfile
        file:
          path: "{{ sat_prodlog_tempfile.path }}"
          state: absent
      when: refresh_satellite_manifest

- hosts: "{{ HOSTS | default('satellite.example.com') }}"
  connection: local
  gather_facts: false
  tasks:
    - ansible.builtin.include_tasks: setup_satellite_infra_subtasks.yml
